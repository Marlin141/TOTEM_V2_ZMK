#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

#define V2Base      0
#define V2NumNav    1
#define V2Sym       2
#define V2Game      3
#define V2Func      4

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        Copy {
            bindings = <&kp LC(C)>;
            key-positions = <22 23 23>;
        };

        Paste {
            bindings = <&kp LC(V)>;
            key-positions = <23 24>;
        };

        Cut {
            bindings = <&kp LC(X)>;
            key-positions = <22 24>;
        };

        PasteNoFormat {
            bindings = <&kp LS(LC(V))>;
            key-positions = <22 24 23>;
        };

        CapsLock {
            bindings = <&kp CLCK>;
            key-positions = <13 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        V2Base {
            bindings = <
         &kp Q       &kp W       &kp F               &kp P            &kp B         &kp J    &kp L        &kp U      &kp Y    &kp SEMI
         &hm LGUI A  &hm LALT R  &hm LEFT_CONTROL S  &kp T            &kp G         &kp M    &kp N        &kp E      &kp I    &kp O
&kp ESC  &kp Z       &kp X       &kp C               &kp D            &kp V         &kp K    &kp H        &kp COMMA  &kp DOT  &kp FSLH  &kp SQT
                                 &lt 3 DEL           &lt 2 BACKSPACE  &kp LSHIFT    &kp RET  &lt 1 SPACE  &kp TAB
            >;
        };

        V2NumNav {
            bindings = <
        &kp PLUS   &kp N7  &kp N8  &kp N9  &kp STAR     &trans  &trans    &kp UP    &trans  &trans
        &kp N0     &kp N4  &kp N5  &kp N6  &kp EQUAL    &trans  &kp LEFT  &kp DOWN  &kp UP  &trans
&trans  &kp MINUS  &kp N1  &kp N2  &kp N3  &kp FSLH     &trans  &trans    &trans    &trans  &trans  &trans
                           &trans  &trans  &trans       &trans  &trans    &trans
            >;
        };

        V2Sym {
            bindings = <
        &kp EXCL  &kp AT  &kp POUND  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS  &kp STAR  &kp MINUS  &kp EQUAL
        &trans    &trans  &kp LPAR   &kp RPAR  &trans       &trans     &kp LBRC  &kp RBRC  &trans     &trans
&trans  &trans    &trans  &kp LBKT   &kp RBKT  &trans       &trans     &trans    &trans    &trans     &trans     &trans
                          &trans     &trans    &trans       &trans     &trans    &trans
            >;
        };

        V2Func {
            bindings = <
            &trans  &trans  &kp C_BRI_DN  &kp C_BRI_UP  &bt BT_SEL 0    &trans  &trans  &trans  &trans  &trans
            &trans  &trans  &kp C_VOL_DN  &kp C_VOL_UP  &bt BT_SEL 1    &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &trans  &trans  &trans        &trans        &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans  &trans
                            &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        V2Game {
            bindings = <
        &trans  &trans  &kp W   &trans  &trans    &trans  &trans    &kp UP    &trans     &trans
        &trans  &kp A   &kp S   &kp D   &trans    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans    &trans    &trans     &trans  &trans
                        &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };
    };
};
